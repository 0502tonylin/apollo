syntax = "proto2";

package apollo.planning;

import "modules/common/proto/header.proto";
import "modules/common/proto/vehicle_signal.proto";
import "modules/common/proto/path_point.proto";
import "modules/canbus/proto/chassis.proto";
import "modules/planning/proto/planning_internal.proto";

message ADCSignals {
  enum SignalType {
    LEFT_TURN = 1;
    RIGHT_TURN = 2;
    LOW_BEAM_LIGHT = 3;
    HIGH_BEAM_LIGHT = 4;
    FOG_LIGHT = 5;
    EMERGENCY_LIGHT = 6;
  }
  repeated SignalType signal = 1;
}

message EStop {
  // is_estop == true when emergency stop is required
  optional bool is_estop = 1;
}

message ADCTrajectory {
  optional apollo.common.Header header = 1;
  optional double total_path_length = 2; // in meters
  optional double total_path_time = 3; // in seconds
  repeated apollo.common.TrajectoryPoint trajectory_point = 4;
  optional EStop estop = 6;
  repeated apollo.common.PathPoint path_point = 7;
  optional apollo.planning_internal.Debug debug = 8;
  // is_replan == true mean replan triggered
  optional bool is_replan = 9 [default = false];
  // Specify trajectory gear
  optional apollo.canbus.Chassis.GearPosition gear = 10;
  optional apollo.common.VehicleSignal signal = 11;
}
